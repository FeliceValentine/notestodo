{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","todo","userInput","addHandler","newTodo","push","setState","removeAll","pop","remove","console","log","this","className","map","item","index","onClick","onChange","event","target","value","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAyDeA,E,4MApDbC,MAAQ,CACNC,KAAM,GACNC,UAAW,I,EAIbC,WAAa,WACX,IAAIC,EAAO,YAAO,EAAKJ,MAAMC,MAC7BG,EAAQC,KAAK,EAAKL,MAAME,WACxB,EAAKI,SAAS,CAAEL,KAAMG,IACtB,EAAKE,SAAS,CAAEJ,UAAW,M,EAG9BK,UAAY,WACX,IAAIH,EAAO,YAAO,EAAKJ,MAAMC,MAC7BG,EAAQI,IAAI,EAAKR,MAAME,WACvB,EAAKI,SAAS,CAAEL,KAAMG,IACtB,EAAKE,SAAS,CAAEJ,UAAW,M,EAG5BO,OAAS,WACR,IAAIL,EAAO,YAAO,EAAKJ,MAAMC,MAC7BG,EAAQI,IAAI,EAAKR,MAAME,WACvB,EAAKI,SAAS,CAAEL,KAAMG,IACtB,EAAKE,SAAS,CAAEJ,UAAW,M,4CAI3B,WAAU,IAAD,OAEP,OADAQ,QAAQC,IAAIC,KAAKZ,OAEjB,sBAAKa,UAAU,MAAf,UACE,uCACCD,KAAKZ,MAAMC,KAAKa,KAAI,SAACC,EAAMC,GAC1B,OACE,sBAAKH,UAAW,OAAhB,UACE,6BAAKE,IACL,wBAAQF,UAAU,IAAII,QAAS,EAAKR,OAApC,iBAF0BO,MAMhC,uBAAOE,SAAU,SAACC,GAAD,OAAW,EAAKb,SAAS,CAACJ,UAAWiB,EAAMC,OAAOC,SACjEA,MAAOT,KAAKZ,MAAME,YAGpB,wBAAQe,QAASL,KAAKT,WAAtB,sBACA,wBAAQc,QAASL,KAAKL,UAAtB,+B,GA/CYe,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.522add55.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\n\nclass App extends React.Component {\n  state = {\n    todo: [],\n    userInput: \"\"\n  }\n\n\n  addHandler = () => {\n    let newTodo = [...this.state.todo]\n    newTodo.push(this.state.userInput)\n    this.setState({ todo: newTodo })\n    this.setState({ userInput: \"\" })\n  }\n\n removeAll = () =>{\n  let newTodo = [...this.state.todo]\n  newTodo.pop(this.state.userInput)\n  this.setState({ todo: newTodo })\n  this.setState({ userInput: \"\" })\n }\n\n remove = () =>{\n  let newTodo = [...this.state.todo]\n  newTodo.pop(this.state.userInput)\n  this.setState({ todo: newTodo })\n  this.setState({ userInput: \"\" })\n }\n \n\n  render() {\n    console.log(this.state)\n    return (\n    <div className=\"App\">\n      <h1>tasks</h1>\n      {this.state.todo.map((item, index) => {\n        return (\n          <div className =\"list\" key={index}>\n            <h2>{item}</h2>\n            <button className=\"x\" onClick={this.remove}>x</button>\n          </div>\n        )\n      })}\n      <input onChange={(event) => this.setState({userInput: event.target.value}) }\n        value={this.state.userInput}\n      />\n      {}\n      <button onClick={this.addHandler}>add task</button>\n      <button onClick={this.removeAll}>remove all</button>\n      \n    </div>\n  );\n}\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}